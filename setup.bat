REM This batch script was generated by AI and has yet to been tested. If you run into any issue please let me know. Thanks.

@echo off
setlocal

REM Check if manage.py exists in the current directory
if not exist manage.py (
    echo Error: manage.py not found in the current directory.
    exit /b 1
)

REM Check for Python installation and version
for /f "tokens=2 delims==" %%i in ('wmic path win32_process get name^, executablepath /format:list ^| findstr /i "python.exe"') do (
    set "PYTHON_PATH=%%i"
)
if "%PYTHON_PATH%"=="" (
    echo Error: Python is not installed. Please install Python 3.6 or higher.
    exit /b 1
)

for /f "tokens=2 delims==" %%i in ('"%PYTHON_PATH%" -c "import sys; print('.'.join(map(str, sys.version_info[:3])))"') do (
    set "PYTHON_VERSION=%%i"
)
if "%PYTHON_VERSION%"=="error" (
    echo Error: Python version 3.6 or higher is required.
    exit /b 1
)
echo Using Python %PYTHON_VERSION% at %PYTHON_PATH%

REM Check for pip installation
for /f "tokens=2 delims==" %%i in ('wmic path win32_process get name^, executablepath /format:list ^| findstr /i "pip.exe"') do (
    set "PIP_PATH=%%i"
)
if "%PIP_PATH%"=="" (
    echo Error: pip is not installed. Please install pip.
    exit /b 1
)

echo Using pip at %PIP_PATH%

REM Check if venv is installed
%PYTHON_PATH% -m venv --help >nul 2>&1
if errorlevel 1 (
    set /p install_venv="Python venv module is not installed. Do you want to install it? (y/n): "
    if /i "%install_venv%"=="y" (
        %PIP_PATH% install virtualenv
    ) else (
        echo Error: venv is required to proceed.
        exit /b 1
    )
)

REM Create a virtual environment if not already present
if not exist "venv" (
    %PYTHON_PATH% -m venv venv
)

REM Activate the virtual environment
call venv\Scripts\activate

REM Install dependencies
%PIP_PATH% install -r requirements.txt

REM Perform database migrations
%PYTHON_PATH% manage.py migrate

REM Create superuser (admin user)
set /p create_superuser="Do you want to create a Django superuser? (y/n): "
if /i "%create_superuser%"=="y" (
    set /p admin_username="Enter admin username: "
    set /p admin_email="Enter admin email: "
    set /p admin_password="Enter admin password: "
    %PYTHON_PATH% manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('%admin_username%', '%admin_email%', '%admin_password%')"
)

REM Run the development server
%PYTHON_PATH% manage.py runserver

endlocal
